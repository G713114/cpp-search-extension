var headersIndex=[{"name":"<concepts>","path":"cpp/header/concepts","description":"Fundamental library concepts"},{"name":"<cstdlib>","path":"cpp/header/cstdlib","description":"General purpose utilities:  program control,  dynamic memory allocation,  random numbers,  sort and search"},{"name":"<csignal>","path":"cpp/header/csignal","description":"Functions and macro constants for signal management"},{"name":"<csetjmp>","path":"cpp/header/csetjmp","description":"Macro (and function) that saves (and jumps) to an execution context"},{"name":"<cstdarg>","path":"cpp/header/cstdarg","description":"Handling of variable length argument lists"},{"name":"<typeinfo>","path":"cpp/header/typeinfo","description":"Runtime type information utilities"},{"name":"<typeindex>","path":"cpp/header/typeindex","description":"std::type_index"},{"name":"<type_traits>","path":"cpp/header/type traits","description":"Compile-time type information"},{"name":"<bitset>","path":"cpp/header/bitset","description":"std::bitset class template"},{"name":"<functional>","path":"cpp/header/functional","description":"Function objects, Function invocations, Bind operations and Reference wrappers"},{"name":"<utility>","path":"cpp/header/utility","description":"Various  utility components"},{"name":"<ctime>","path":"cpp/header/ctime","description":"C-style time/date utilites"},{"name":"<chrono>","path":"cpp/header/chrono","description":"C++ time utilites"},{"name":"<cstddef>","path":"cpp/header/cstddef","description":"standard macros and typedefs"},{"name":"<initializer_list>","path":"cpp/header/initializer list","description":"std::initializer_list class template"},{"name":"<tuple>","path":"cpp/header/tuple","description":"std::tuple class template"},{"name":"<any>","path":"cpp/header/any","description":"std::any class"},{"name":"<optional>","path":"cpp/header/optional","description":"std::optional class template"},{"name":"<variant>","path":"cpp/header/variant","description":"std::variant class template"},{"name":"<compare>","path":"cpp/header/compare","description":"Three-way comparison operator support"},{"name":"<version>","path":"cpp/header/version","description":"supplies implementation-dependent library information"},{"name":"<new>","path":"cpp/header/new","description":"Low-level memory management utilities"},{"name":"<memory>","path":"cpp/header/memory","description":"Higher level memory management utilities"},{"name":"<scoped_allocator>","path":"cpp/header/scoped allocator","description":"Nested allocator class"},{"name":"<memory_resource>","path":"cpp/header/memory resource","description":"Polymorphic allocators and memory resources"},{"name":"<climits>","path":"cpp/header/climits","description":"limits of integral types"},{"name":"<cfloat>","path":"cpp/header/cfloat","description":"limits of float types"},{"name":"<cstdint>","path":"cpp/header/cstdint","description":"fixed-size types and  limits of other types"},{"name":"<cinttypes>","path":"cpp/header/cinttypes","description":"formatting macros , intmax_t and uintmax_t math and conversions"},{"name":"<limits>","path":"cpp/header/limits","description":"standardized way to query properties of arithmetic types"},{"name":"<exception>","path":"cpp/header/exception","description":"Exception handling utilities"},{"name":"<stdexcept>","path":"cpp/header/stdexcept","description":"Standard exception objects"},{"name":"<cassert>","path":"cpp/header/cassert","description":"Conditionally compiled macro that compares its argument to zero"},{"name":"<system_error>","path":"cpp/header/system error","description":"defines std::error_code, a platform-dependent error code"},{"name":"<cerrno>","path":"cpp/header/cerrno","description":"Macro containing the last error number"},{"name":"<contract>","path":"cpp/header/contract","description":"Contract violation information"},{"name":"<cctype>","path":"cpp/header/cctype","description":"Functions to determine the type contained in character data"},{"name":"<cwctype>","path":"cpp/header/cwctype","description":"Functions to determine the type contained in wide character data"},{"name":"<cstring>","path":"cpp/header/cstring","description":"various  narrow character string handling functions"},{"name":"<cwchar>","path":"cpp/header/cwchar","description":"various  wide  and  multibyte string handling functions"},{"name":"<cuchar>","path":"cpp/header/cuchar","description":"C-style  Unicode character conversion functions"},{"name":"<string>","path":"cpp/header/string","description":"std::basic_string class template"},{"name":"<string_view>","path":"cpp/header/string view","description":"std::basic_string_view class template"},{"name":"<charconv>","path":"cpp/header/charconv","description":"std::to_chars and std::from_chars"},{"name":"<array>","path":"cpp/header/array","description":"std::array container"},{"name":"<vector>","path":"cpp/header/vector","description":"std::vector container"},{"name":"<deque>","path":"cpp/header/deque","description":"std::deque container"},{"name":"<list>","path":"cpp/header/list","description":"std::list container"},{"name":"<forward_list>","path":"cpp/header/forward list","description":"std::forward_list container"},{"name":"<set>","path":"cpp/header/set","description":"std::set and std::multiset associative containers"},{"name":"<map>","path":"cpp/header/map","description":"std::map and std::multimap associative containers"},{"name":"<unordered_set>","path":"cpp/header/unordered set","description":"std::unordered_set and std::unordered_multiset unordered associative containers"},{"name":"<unordered_map>","path":"cpp/header/unordered map","description":"std::unordered_map and std::unordered_multimap unordered associative containers"},{"name":"<stack>","path":"cpp/header/stack","description":"std::stack container adaptor"},{"name":"<queue>","path":"cpp/header/queue","description":"std::queue and std::priority_queue container adaptors"},{"name":"<span>","path":"cpp/header/span","description":"std::span view"},{"name":"<iterator>","path":"cpp/header/iterator","description":"Range iterators"},{"name":"<ranges>","path":"cpp/header/ranges","description":"Range access, primitives, requirements, utilities and adaptors"},{"name":"<algorithm>","path":"cpp/header/algorithm","description":"Algorithms that operate on ranges"},{"name":"<execution>","path":"cpp/header/execution","description":"Predefined execution policies for parallel versions of the algorithms"},{"name":"<cmath>","path":"cpp/header/cmath","description":"Common mathematics functions"},{"name":"<complex>","path":"cpp/header/complex","description":"Complex number type"},{"name":"<valarray>","path":"cpp/header/valarray","description":"Class for representing and manipulating arrays of values"},{"name":"<random>","path":"cpp/header/random","description":"Random number generators and distributions"},{"name":"<numeric>","path":"cpp/header/numeric","description":"Numeric operations on values in containers"},{"name":"<ratio>","path":"cpp/header/ratio","description":"Compile-time rational arithmetic"},{"name":"<cfenv>","path":"cpp/header/cfenv","description":"Floating-point environment access functions"},{"name":"<bit>","path":"cpp/header/bit","description":"Bit manipulation functions"},{"name":"<iosfwd>","path":"cpp/header/iosfwd","description":"forward declarations of all classes in the input/output library"},{"name":"<ios>","path":"cpp/header/ios","description":"std::ios_base class, std::basic_ios class template and several typedefs"},{"name":"<istream>","path":"cpp/header/istream","description":"std::basic_istream class template and several typedefs"},{"name":"<ostream>","path":"cpp/header/ostream","description":"std::basic_ostream, std::basic_iostream class templates and several typedefs"},{"name":"<iostream>","path":"cpp/header/iostream","description":"several standard stream objects"},{"name":"<fstream>","path":"cpp/header/fstream","description":"std::basic_fstream, std::basic_ifstream, std::basic_ofstream class templates and several typedefs"},{"name":"<sstream>","path":"cpp/header/sstream","description":"std::basic_stringstream, std::basic_istringstream, std::basic_ostringstream class templates and several typedefs"},{"name":"<syncstream>","path":"cpp/header/syncstream","description":"std::basic_osyncstream, std::basic_syncbuf, and typedefs"},{"name":"<strstream>","path":"cpp/header/strstream","description":"std::strstream, std::istrstream, std::ostrstream"},{"name":"<iomanip>","path":"cpp/header/iomanip","description":"Helper functions to control the format of input and output"},{"name":"<streambuf>","path":"cpp/header/streambuf","description":"std::basic_streambuf class template"},{"name":"<cstdio>","path":"cpp/header/cstdio","description":"C-style input-output functions"},{"name":"<locale>","path":"cpp/header/locale","description":"Localization utilities"},{"name":"<clocale>","path":"cpp/header/clocale","description":"C localization utilities"},{"name":"<codecvt>","path":"cpp/header/codecvt","description":"Unicode conversion facilities"},{"name":"<regex>","path":"cpp/header/regex","description":"Classes, algorithms and iterators to support regular expression processing"},{"name":"<atomic>","path":"cpp/header/atomic","description":"Atomic operations library"},{"name":"<thread>","path":"cpp/header/thread","description":"std::thread class and  supporting functions"},{"name":"<mutex>","path":"cpp/header/mutex","description":"mutual exclusion primitives"},{"name":"<shared_mutex>","path":"cpp/header/shared mutex","description":"shared mutual exclusion primitives"},{"name":"<future>","path":"cpp/header/future","description":"primitives for asynchronous computations"},{"name":"<condition_variable>","path":"cpp/header/condition variable","description":"thread waiting conditions"},{"name":"<filesystem>","path":"cpp/header/filesystem","description":"std::path class and  supporting functions"},{"name":"<experimental/filesystem>","path":"cpp/header/experimental/filesystem","description":"Filesystem library"},{"name":"<experimental/any>","path":"cpp/header/experimental/any","description":"any"},{"name":"<experimental/memory_resource>","path":"cpp/header/experimental/memory resource","description":"Polymorphic allocators and memory resources"},{"name":"<experimental/optional>","path":"cpp/header/experimental/optional","description":"optional"},{"name":"<experimental/string_view>","path":"cpp/header/experimental/string view","description":"basic_string_view"},{"name":"<experimental/ranges/algorithm>","path":"cpp/header/experimental/ranges/algorithm","description":"Algorithms library"},{"name":"<experimental/ranges/concepts>","path":"cpp/header/experimental/ranges/concepts","description":"Concepts library"},{"name":"<experimental/ranges/functional>","path":"cpp/header/experimental/ranges/functional","description":"Function objects"},{"name":"<experimental/ranges/iterator>","path":"cpp/header/experimental/ranges/iterator","description":"Iterators library"},{"name":"<experimental/ranges/random>","path":"cpp/header/experimental/ranges/random","description":"UniformRandomNumberGenerator concept"},{"name":"<experimental/ranges/range>","path":"cpp/header/experimental/ranges/range","description":"Ranges library"},{"name":"<experimental/ranges/tuple>","path":"cpp/header/experimental/ranges/tuple","description":"Tagged tuples"},{"name":"<experimental/ranges/type_traits>","path":"cpp/header/experimental/ranges/type traits","description":"Metaprogramming and type traits"},{"name":"<experimental/ranges/utility>","path":"cpp/header/experimental/ranges/utility","description":"Utility components"},{"name":"<ccomplex>","path":"cpp/header/ccomplex","description":"simply includes the header <complex>"},{"name":"<ctgmath>","path":"cpp/header/ctgmath","description":"simply includes the headers <complex> and <cmath>: the overloads equivalent to the contents of the C header tgmath.h are already provided by those headers"},{"name":"<ciso646>","path":"cpp/header/ciso646","description":"empty header. The macros that appear in iso646.h in C are keywords in C++"},{"name":"<cstdalign>","path":"cpp/header/cstdalign","description":"defines one compatibility macro constant"},{"name":"<cstdbool>","path":"cpp/header/cstdbool","description":"defines one compatibility macro constant"}];